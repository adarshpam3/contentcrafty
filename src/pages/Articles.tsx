
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { supabase } from "@/integrations/supabase/client";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useNavigate } from "react-router-dom";
import { Sidebar } from "@/components/Sidebar";
import { ArticleSearch } from "@/components/articles/ArticleSearch";
import { ArticleList } from "@/components/articles/ArticleList";
import { CategoriesContent } from "@/components/articles/CategoriesContent";

export default function Articles() {
  const navigate = useNavigate();
  const [searchQuery, setSearchQuery] = useState("");
  const [sortDirection, setSortDirection] = useState<"asc" | "desc">("desc");

  const { data: articles, isLoading: articlesLoading } = useQuery({
    queryKey: ["articles"],
    queryFn: async () => {
      const { data, error } = await supabase
        .from("articles")
        .select("*, projects(name)")
        .eq('is_category', false)
        .order("created_at", { ascending: sortDirection === "asc" });

      if (error) throw error;
      return data;
    },
  });

  const { data: categories, isLoading: categoriesLoading } = useQuery({
    queryKey: ["categories"],
    queryFn: async () => {
      const { data, error } = await supabase
        .from("articles")
        .select("*")
        .eq('is_category', true)
        .order("created_at", { ascending: sortDirection === "asc" });

      if (error) throw error;
      return data;
    },
  });

  const filteredArticles = articles?.filter((article) =>
    article.topic.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const filteredCategories = categories?.filter((category) =>
    category.topic.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const toggleSort = () => {
    setSortDirection(sortDirection === "asc" ? "desc" : "asc");
  };

  return (
    <div className="flex min-h-screen bg-gray-50">
      <Sidebar />
      <div className="flex-1 p-8">
        <div className="max-w-7xl mx-auto">
          <div className="flex justify-between items-center mb-6">
            <div>
              <h1 className="text-2xl font-semibold mb-2">List of articles & categories</h1>
              <p className="text-gray-600">
                List of all your articles & categories generated by Copymate.
              </p>
            </div>
            <div className="flex items-center gap-4">
              <div className="text-sm text-gray-600">
                {articles?.length || 0} Articles left (5 tokens)
              </div>
              <Button variant="outline">Upgrade Plan</Button>
              <Button 
                className="bg-purple-600 hover:bg-purple-700 text-white"
                onClick={() => navigate('/create-content')}
              >
                Create Content
              </Button>
            </div>
          </div>

          <Tabs defaultValue="articles">
            <TabsList>
              <TabsTrigger value="articles">Articles</TabsTrigger>
              <TabsTrigger value="categories">Categories</TabsTrigger>
            </TabsList>

            <TabsContent value="articles" className="mt-6">
              <ArticleSearch 
                searchQuery={searchQuery}
                onSearchChange={setSearchQuery}
                onSortToggle={toggleSort}
              />

              <ArticleList 
                articles={filteredArticles || []}
                isLoading={articlesLoading}
              />
            </TabsContent>

            <TabsContent value="categories" className="mt-6">
              <CategoriesContent 
                categories={filteredCategories || []}
                isLoading={categoriesLoading}
                searchQuery={searchQuery}
                onSearchChange={setSearchQuery}
              />
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  );
}
