import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { supabase } from "@/integrations/supabase/client";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { useNavigate } from "react-router-dom";
import { Database } from "@/integrations/supabase/types";
import { SearchBar } from "@/components/articles/SearchBar";
import { ArticlesTable } from "@/components/articles/ArticlesTable";
import { TableHeader } from "@/components/articles/TableHeader";

type Article = Database["public"]["Tables"]["articles"]["Row"];

export default function Articles() {
  const navigate = useNavigate();
  const [searchQuery, setSearchQuery] = useState("");
  const [sortDirection, setSortDirection] = useState<"asc" | "desc">("desc");

  const { data: articles, isLoading } = useQuery({
    queryKey: ["articles"],
    queryFn: async () => {
      const { data, error } = await supabase
        .from("articles")
        .select("*")
        .order("created_at", { ascending: sortDirection === "asc" });

      if (error) throw error;
      return data as Article[];
    },
  });

  const filteredArticles = articles?.filter((article) =>
    article.topic.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const handleDelete = async (id: string) => {
    const { error } = await supabase
      .from("articles")
      .delete()
      .eq("id", id);
    if (error) {
      console.error("Error deleting article:", error);
    }
  };

  const toggleSort = () => {
    setSortDirection(sortDirection === "asc" ? "desc" : "asc");
  };

  return (
    <div className="p-8">
      <div className="flex justify-between items-center mb-6">
        <div>
          <h1 className="text-2xl font-semibold mb-2">List of articles & categories</h1>
          <p className="text-gray-600">
            List of all your articles & categories generated by Copymate.
          </p>
        </div>
        <div className="flex items-center gap-4">
          <div className="text-sm text-gray-600">
            {articles?.length || 0} Articles left (3 tokens)
          </div>
          <Button variant="outline">Upgrade Plan</Button>
          <Button 
            className="bg-purple-600 hover:bg-purple-700"
            onClick={() => navigate('/create-content')}
          >
            Create Content
          </Button>
        </div>
      </div>

      <Tabs defaultValue="articles">
        <TabsList>
          <TabsTrigger value="articles" className="text-purple-600">Articles</TabsTrigger>
          <TabsTrigger value="categories">Categories</TabsTrigger>
        </TabsList>

        <TabsContent value="articles" className="mt-6">
          <SearchBar
            searchQuery={searchQuery}
            onSearchChange={setSearchQuery}
            sortDirection={sortDirection}
            onSortToggle={toggleSort}
          />

          <div className="bg-white rounded-lg shadow">
            <table className="w-full">
              <TableHeader />
              <tbody>
                <ArticlesTable
                  articles={filteredArticles || []}
                  isLoading={isLoading}
                  onDelete={handleDelete}
                />
              </tbody>
            </table>
          </div>
        </TabsContent>

        <TabsContent value="categories">
          <div className="text-center p-8 text-gray-500">
            Categories feature coming soon
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
}